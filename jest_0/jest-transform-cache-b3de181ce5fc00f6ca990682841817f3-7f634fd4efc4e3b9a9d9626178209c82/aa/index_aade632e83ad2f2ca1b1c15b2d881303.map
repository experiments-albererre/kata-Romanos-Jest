{"version":3,"sources":["index.js"],"names":["ROMAN_TABLE","ROMAN_TABLE_KEYS","Object","keys","reverse","fromNumber","value","Number","isInteger","Error","result","forEach","key"],"mappings":";;;;;;AAAA,IAAMA,WAAW,GAAG;AAClB,QAAM,GADY;AAElB,OAAK,IAFa;AAGlB,OAAK,GAHa;AAIlB,OAAK,IAJa;AAKlB,OAAK,GALa;AAMlB,MAAI,IANc;AAOlB,MAAI,GAPc;AAQlB,MAAI,IARc;AASlB,MAAI,GATc;AAUlB,KAAG,IAVe;AAWlB,KAAG,GAXe;AAYlB,KAAG,IAZe;AAalB,KAAG;AAbe,CAApB;AAgBA,IAAMC,gBAAgB,GAAGC,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,OAAzB,EAAzB;;AAEO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AACnC,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAArC,IAA0C,CAACC,MAAM,CAACC,SAAP,CAAiBF,KAAjB,CAA/C,EAAwE;AACtE,UAAM,IAAIG,KAAJ,CAAU,WAAV,CAAN;AACD;;AAED,MAAIC,MAAM,GAAG,EAAb;AACAT,EAAAA,gBAAgB,CAACU,OAAjB,CAAyB,UAAAC,GAAG,EAAI;AAC9B,WAAON,KAAK,IAAIM,GAAhB,EAAqB;AACnBN,MAAAA,KAAK,IAAIM,GAAT;AACAF,MAAAA,MAAM,IAAIV,WAAW,CAACY,GAAD,CAArB;AACD;AACF,GALD;AAMA,SAAOF,MAAP;AACD,CAbM","sourcesContent":["const ROMAN_TABLE = {\n  1000: \"M\",\n  900: \"CM\",\n  500: \"D\",\n  400: \"CD\",\n  100: \"C\",\n  90: \"XC\",\n  50: \"L\",\n  40: \"XL\",\n  10: \"X\",\n  9: \"IX\",\n  5: \"V\",\n  4: \"IV\",\n  1: \"I\"\n};\n\nconst ROMAN_TABLE_KEYS = Object.keys(ROMAN_TABLE).reverse();\n\nexport const fromNumber = (value) => {\n  if (typeof value !== 'number' || value < 0 || !Number.isInteger(value)) {\n    throw new Error('No number');\n  }\n\n  let result = '';\n  ROMAN_TABLE_KEYS.forEach(key => {\n    while (value >= key) {\n      value -= key;\n      result += ROMAN_TABLE[key];\n    }\n  });\n  return result;\n};\n"]}